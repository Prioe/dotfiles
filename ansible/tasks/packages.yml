---
- name: Include brew taps list
  include_vars: vars/taps.yml
  tags:
    - brew_taps

- name: Include brew formula list
  include_vars: vars/formula.yml
  tags:
    - brew_formula

- name: Include brew casks list
  include_vars: vars/casks.yml
  tags:
    - brew_cask

- name: Include pacman package list
  include_vars: vars/pacman.yml
  tags:
    - pacman

- name: Include AUR package list
  include_vars: vars/aur.yml
  tags:
    - aur

- name: Include APT package list
  include_vars: vars/apt.yml
  tags:
    - apt

- name: Include dnf package list
  include_vars: vars/dnf.yml
  tags:
    - dnf

- name: Include dnf copr list
  include_vars: vars/copr.yml
  tags:
    - copr

- name: Include dnf repos list
  include_vars: vars/dnf_repos.yml
  tags:
    - dnf_repos

- name: Include gems list
  include_vars: vars/gems.yml
  tags:
    - gem

- name: Include python package list
  include_vars: vars/pip.yml
  tags:
    - pip

- block:
    - name: Update/Upgrade Homebrew
      homebrew:
        update_homebrew: true
        upgrade_all: true
      tags:
        - brew_taps
        - brew_formula
        - brew_cask

    - name: Manage taps
      homebrew_tap:
        name: "{{ item.key }}"
        state: "{{ item.value.state | default('present') }}"
      with_dict: "{{taps}}"
      tags:
        - brew_taps

    - name: Manage formula
      homebrew:
        name: "{{ item.key }}"
        install_options: "{{ item.value.options | default(omit) }}"
        state: "{{ item.value.state | default('present') }}"
      with_dict: "{{formula}}"
      tags:
        - brew_formula

    - name: Manage casks
      homebrew_cask:
        name: "{{ item.key }}"
        state: "{{ item.value.state | default('present') }}"
      with_dict: "{{casks}}"
      tags:
        - brew_cask

    - name: Manage python packages
      pip:
        name: "{{ item.key }}"
        state: "{{ item.value.state | default('latest') }}"
        executable: "{{ item.value.executable | default('pip3') }}"
      with_dict: "{{pip}}"
      tags:
        - pip

  when: ansible_os_family == "Darwin"

- block:
    - name: Update/Upgrade pacman
      pacman:
        update_cache: true
        upgrade: true

    - name: Manage pacman packages
      pacman:
        name: "{{ item.key }}"
        state: "{{ item.value.state | default('latest') }}"
      with_dict: "{{pacman}}"

    - name: Manage AUR packages
      kewlfft.aur.aur:
        name: "{{ item.key }}"
        state: "{{ item.value.state | default('present') }}"
      become_user: aur_builder
      with_dict: "{{aur}}"

  become: true
  when: ansible_os_family == "Archlinux"
  tags: pacman

- block:
    - name: Update/Upgrade apt
      apt:
        update_cache: true
        upgrade: dist

    - name: Manage apt packages
      apt:
        name: "{{ item.key }}"
        state: "{{ item.value.state | default('latest') }}"
      with_dict: "{{apt}}"

    - name: Manage python packages
      pip:
        name: "{{ item.key }}"
        state: "{{ item.value.state | default('latest') }}"
        executable: "{{ item.value.executable | default('pip3') }}"
      with_dict: "{{pip}}"
      tags:
        - pip

  become: true
  when: ansible_os_family == "Debian"
  tags: apt

- block:
    - name: Install config-manager
      dnf:
        name: dnf-plugins-core
        state: present

    - name: Enable dnf copr repositories
      community.general.copr:
        name: "{{ item.key }}"
        state: enabled
      with_dict: "{{copr}}"

    - name: Add repos with dnf config-manager
      command: dnf config-manager --add-repo "{{ item.key }}"
      with_dict: "{{dnf_repos}}"

    - name: Update/Upgrade dnf
      dnf:
        name: "*"
        state: latest
        update_cache: true

    - name: Manage dnf packages
      dnf:
        name: "{{ item.key }}"
        state: "{{ item.value.state | default('latest') }}"
      with_dict: "{{dnf}}"

  become: true
  when: ansible_os_family == "RedHat"
  tags: dnf

- name: Manage gems
  gem:
    name: "{{ item.key }}"
    state: "{{ item.value.state | default('latest') }"
  with_dict: "{{gems}}"
  tags:
    - gem
